<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SkaaGameDataLib</name>
    </assembly>
    <members>
        <member name="M:SkaaGameDataLib.DbfFileWriter.Save(System.Data.DataTable,System.IO.Stream)">
            <summary>
            Saves this <see cref="T:System.Data.DataTable"/> to the specified stream in the DBF/dBaseIII format
            </summary>
            <param name="dt">The DataTable to save</param>
            <param name="str">The stream to which to write</param>
        </member>
        <member name="M:SkaaGameDataLib.DbfFileWriter.Save(System.Data.DataTable,System.String)">
            <summary>
            Saves this <see cref="T:System.Data.DataTable"/> as the specified file in the DBF/dBaseIII format
            </summary>
            <param name="dt">The DataTable to save</param>
            <param name="filepath">The fully-qualified path of the file to write to</param>
        </member>
        <member name="F:SkaaGameDataLib.ResourceDatabase.ResIdxNameSize">
            <summary>
            The number of characters, including null, that is used to name a ResIdx 
            field. Shorter names are padded with spaces (0x20).
            </summary>
        </member>
        <member name="F:SkaaGameDataLib.ResourceDatabase.ResNameSize">
            <summary>
            The number of characters, that is be used to name a Res 
            field. Shorter names are padded with spaces (0x20).
            </summary>
        </member>
        <member name="F:SkaaGameDataLib.ResourceDatabase.OffsetSize">
            <summary>
            The number of bytes used to represent the offset of a RESX 
            record. Smaller values are padded with nulls (0x0).
            </summary>
        </member>
        <member name="F:SkaaGameDataLib.ResourceDatabase.ResIdxDefinitionSize">
            <summary>
            The total size of a RESX definition.
            </summary>
        </member>
        <member name="F:SkaaGameDataLib.ResourceDatabase.ResDefinitionSize">
            <summary>
            The total size of a Res definition.
            </summary>
        </member>
        <member name="F:SkaaGameDataLib.ResourceDatabase.MaxRecordCount">
            <summary>
            Arbitrary number that isn't necessary for the game but, since the record count
            is read from the file, it could be any 16-bit value. Since RES files have no
            header by which to identify the file, we assume a file claiming more than 150
            records is not a valid RESX file. 
            </summary>
        </member>
        <member name="M:SkaaGameDataLib.ResourceDatabase.ReadDefinitions(System.IO.Stream,System.Boolean)">
            <summary>
            Reads a the header of a stream containing char[9], uint32 data: a datatable's name and its offset in a file
            </summary>
            <param name="str">The stream from which to read. The first two bytes must be a uint16 containing the number of definitions</param>
            <returns></returns>
        </member>
        <member name="M:SkaaGameDataLib.IndexedBitmap.GetBitmapFromRleBytes(System.Byte[],System.Drawing.Imaging.ColorPalette,System.Int32,System.Int32)">
            <summary>
            Builds a <see cref="T:System.Drawing.Bitmap"/> from an byte array of indexed color values based on the provided palette.
            Algorithm based on IMGbltAreaTransDecompress in IB_ATD.cpp.
            </summary>
            <param name="bitmapBytes">Byte array containing the pixel data and no header</param>
            <param name="pal">The palette to assign to the new Bitmap</param>
            <param name="height">The height of the Bitmap, in pixels</param>
            <param name="width">The width of the Bitmap, in pixels</param>
            <returns>A new <see cref="T:System.Drawing.Bitmap"/> with a <see cref="T:System.Drawing.Imaging.PixelFormat"/> of <see cref="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed"/></returns>
        </member>
        <member name="M:SkaaGameDataLib.IndexedBitmap.DecodeRleStream(System.IO.Stream,SkaaGameDataLib.FileFormats)">
            <summary>
            Reads a Run Length Encoded stream, where only transparent bytes are RLE, and builds a <see cref="T:System.Drawing.Bitmap"/>
            </summary>
            <param name="stream">A stream with its <see cref="P:System.IO.Stream.Position"/> set to the first byte of the header, which is two int16 values for width and height.</param>
        </member>
        <member name="F:SkaaGameDataLib.DataColumnExtensions.ByteLengthPropertyName">
            <summary>
            Describes the length, in bytes, that this field must occupy in the DBF file. Text fields
            should be padded on the right with spaces (0x20) while number fields should be padded
            on the left with nulls (0x00). Numbers can be "padded" by using a <see cref="T:System.Convert"/> 
            function that corresponds to the needed number type. This field is separate and 
            unrelated to the <see cref="P:System.Data.DataColumn.MaxLength"/> property.
            </summary>
        </member>
        <member name="M:SkaaGameDataLib.DataColumnExtensions.GetByteLength(System.Data.DataColumn)">
            <summary>
            Returns the value of the <see cref="P:System.Data.DataColumn.ExtendedProperties"/> element named <see cref="F:SkaaGameDataLib.DataColumnExtensions.ByteLengthPropertyName"/>
            </summary>
        </member>
        <member name="M:SkaaGameDataLib.DataColumnExtensions.SetByteLength(System.Data.DataColumn,System.Byte)">
            <summary>
            Sets the value of the <see cref="P:System.Data.DataColumn.ExtendedProperties"/> element named <see cref="F:SkaaGameDataLib.DataColumnExtensions.ByteLengthPropertyName"/>
            </summary>
        </member>
        <member name="T:SkaaGameDataLib.DbfFile">
            <summary>
            Represents a dBaseIII table (not to be confused with dBaseIII+ or FoxPro) in a DBF file and makes it manipulable via a DataTable. 
            </summary>
            <remarks>
            Constructed with help from: 
            http://www.clicketyclick.dk/databases/xbase/format/dbf.html 
            http://www.digitalpreservation.gov/formats/fdd/fdd000325.shtml
            </remarks>
        </member>
        <member name="M:SkaaGameDataLib.DbfFile.ReadTableData(System.IO.Stream)">
            <summary>
            Fills a DataTable based on the dBaseIII field descriptor information.
            </summary>
            <returns>The new DataTable</returns>
        </member>
        <member name="M:SkaaGameDataLib.DataTableExtensions.WriteResDefinition(System.Data.DataTable,System.IO.Stream,System.UInt32,System.Boolean)">
            <summary>
            Writes a <see cref="T:SkaaGameDataLib.ResourceDatabase"/> header for this <see cref="T:System.Data.DataTable"/> to the <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="str">The <see cref="T:System.IO.Stream"/> to write the header to</param>
            <param name="offset">The offset in the <see cref="T:System.IO.Stream"/> at which to begin writing</param>
            <param name="isIdx">Whether or not to use settings for <see cref="F:SkaaGameDataLib.ResourceDatabase.ResIdxDefinitionSize"/> or <see cref="F:SkaaGameDataLib.ResourceDatabase.ResDefinitionSize"/></param>
        </member>
        <member name="M:SkaaGameDataLib.SkaaSprite.MatchFrameOffsets">
            <summary>
            Iterates through all the rows in the <see cref="T:SkaaGameDataLib.SkaaSprite"/>'s <see cref="P:SkaaGameDataLib.SkaaSprite.DataView"/> and 
            sets each of this sprite's <see cref="T:SkaaGameDataLib.SkaaSpriteFrame"/>'s <see cref="F:SkaaGameDataLib.SkaaSpriteFrame.GameSetDataRows"/>
            property to the DataRow with a BITMAPPTR matching <see cref="P:SkaaGameDataLib.SkaaSpriteFrame.BitmapOffset"/>. It also
            reads the FILENAME property into <see cref="F:SkaaGameDataLib.SkaaFrame.Name"/>.
            </summary>
            <returns>False if any frame did not have a match in the DataView. True otherwise.</returns>
        </member>
        <member name="M:SkaaGameDataLib.SkaaSprite.ToBitmap">
            <summary>
            Builds a <see cref="T:System.Drawing.Bitmap"/> sprite sheet containing all the frames of the specified <see cref="T:SkaaGameDataLib.SkaaSprite"/>
            with no padding between frames. The number of rows/columns of frames is the square root of the number of frames
            with an additional row added when the number of frames is not a perfect square.
            </summary>
            <returns>The newly-generated <see cref="T:System.Drawing.Bitmap"/></returns>
        </member>
        <member name="M:SkaaGameDataLib.SkaaSprite.GetSpriteFrameByteArrays">
            <summary>
            Builds a <see cref="T:System.Collections.Generic.List`1"/> of byte arrays, one array for each <see cref="T:SkaaGameDataLib.SkaaFrame"/> in <see cref="P:SkaaGameDataLib.SkaaSprite.Frames"/>
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.List`1"/> where T is a <see cref="T:byte[]"/></returns>
        </member>
        <member name="M:SkaaGameDataLib.SkaaSprite.FromSprStream(System.IO.Stream,System.Drawing.Imaging.ColorPalette)">
            <summary>
            Creates a new <see cref="T:SkaaGameDataLib.SkaaSprite"/> from a stream of SPR-formatted data
            </summary>
            <param name="str">The stream to read the SPR data from</param>
            <param name="pal">The <see cref="T:System.Drawing.Imaging.ColorPalette"/> to apply to the sprite's images</param>
            <returns>A new <see cref="T:SkaaGameDataLib.SkaaSprite"/></returns>
            <remarks>
            The original game code for reading SPR files can be found <c>ResourceDb::init_imported()</c> 
            in src/ORESDB.cpp around line 72. The <c>resName</c> will be "sprite\\NAME.SPR". SPR files are 
            are considered <c>FLAT</c> by 7KAA. 
            </remarks>
        </member>
        <member name="M:SkaaGameDataLib.SkaaSpriteFrame.#ctor(SkaaGameDataLib.SkaaSprite)">
            <summary>
            Initializes a new <see cref="T:SkaaGameDataLib.SkaaSpriteFrame"/>.
            </summary>
            <param name="parentSprite">The <see cref="T:SkaaGameDataLib.SkaaSprite"/> containing this <see cref="T:SkaaGameDataLib.SkaaSpriteFrame"/></param>
            <param name="stream"></param>
        </member>
        <member name="M:SkaaEditorUI.DataSetExtensions.GetDataSources(System.Data.DataSet)">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.List`1"/> of all data sources in the <see cref="P:System.Data.DataSet.ExtendedProperties"/> element with the name of <see cref="F:SkaaEditorUI.DataSetExtensions.DataSourcesPropertyName"/>
            </summary>
        </member>
        <member name="M:SkaaEditorUI.DataSetExtensions.AddDataSource(System.Data.DataSet,System.String)">
            <summary>
            Adds a new "data source" string to the <see cref="P:System.Data.DataSet.ExtendedProperties"/> <see cref="T:System.Collections.Generic.List`1"/> named <see cref="F:SkaaEditorUI.DataSetExtensions.DataSourcesPropertyName"/>
            </summary>
            <param name="datasource">The name of the data source to add</param>
            <remarks>If <see cref="P:System.Data.DataSet.ExtendedProperties"/> does not contain <see cref="F:SkaaEditorUI.DataSetExtensions.DataSourcesPropertyName"/>, it will be created.</remarks>
        </member>
        <member name="M:SkaaEditorUI.DataSetExtensions.RemoveDataSource(System.Data.DataSet,System.String)">
            <summary>
            Removes the specified data source from the <see cref="P:System.Data.DataSet.ExtendedProperties"/> <see cref="T:System.Collections.Generic.List`1"/> named <see cref="F:SkaaEditorUI.DataSetExtensions.DataSourcesPropertyName"/>
            </summary>
            <param name="datasource">The name of the data source to remove</param>
            <returns>false if the specified data source does not exist, true otherwise</returns>
        </member>
        <member name="M:SkaaEditorUI.DataSetExtensions.OpenStandardGameSet(System.Data.DataSet,System.String)">
            <summary>
            Opens the specified <see cref="T:SkaaGameDataLib.GameSetFile"/>, adds all of its tables and records to the <see cref="T:System.Data.DataSet"/> and adds the file's name, 
            from <see cref="M:System.IO.Path.GetFileName(System.String)"/>, as a new data source
            </summary>
            <param name="filepath"></param>
            <returns>false if <see cref="M:SkaaGameDataLib.DbfFile.ReadStream(System.IO.Stream)"/> returned false, true otherwise</returns>
        </member>
        <member name="M:SkaaEditorUI.DataSetExtensions.SaveStandardGameSet(System.Data.DataSet,System.String)">
            <summary>
            Saves this <see cref="T:System.Data.DataSet"/> to the specified file in the format of <see cref="T:SkaaGameDataLib.GameSetFile"/>, only including a 
            <see cref="T:System.Data.DataTable"/> if its <see cref="F:SkaaGameDataLib.DataTableExtensions.DataSourcePropertyName"/> is <see cref="F:SkaaEditorUI.DataSetExtensions.StandardGameSetDefaultName"/>
            </summary>
            <param name="filepath">The path and file to save this <see cref="T:System.Data.DataSet"/> to</param>
        </member>
        <member name="M:SkaaEditorUI.DataSetExtensions.SaveGameSet(System.Data.DataSet,System.String,System.String)">
            <summary>
            Saves a portion of this <see cref="T:System.Data.DataSet"/> to the specified file in the format of <see cref="T:SkaaGameDataLib.GameSetFile"/>
            </summary>
            <param name="setName">Specifies the <see cref="!:DataTableSourcePropertyName"/> to consider part of the standard game set</param>
            <param name="filepath">The path and file to save this <see cref="T:System.Data.DataSet"/> to</param>
        </member>
        <member name="M:SkaaEditorUI.DataSetExtensions.GetGameSetStream(System.Data.DataSet)">
            <summary>
            Get a <see cref="T:System.IO.MemoryStream"/> of the entire <see cref="T:System.Data.DataSet"/>
            </summary>
            <returns>A <see cref="T:System.IO.MemoryStream"/> in the format of std.set</returns>
        </member>
        <member name="M:SkaaEditorUI.DataSetExtensions.GetStandardGameSetStream(System.Data.DataSet)">
            <summary>
            Get a <see cref="T:System.IO.MemoryStream"/> of the <see cref="T:System.Data.DataSet"/> consisting of the standard game set, <see cref="F:SkaaEditorUI.DataSetExtensions.StandardGameSetDefaultName"/>
            </summary>
            <returns>A <see cref="T:System.IO.MemoryStream"/> in the format of std.set</returns>
        </member>
        <member name="M:SkaaEditorUI.DataSetExtensions.GetGameSetStream(System.Data.DataSet,System.String)">
            <summary>
            Get a <see cref="T:System.IO.MemoryStream"/> of the <see cref="T:System.Data.DataSet"/> consisting of the specified set
            </summary>
            <param name="set">A value that matches the <see cref="F:SkaaEditorUI.DataSetExtensions.DataSourcesPropertyName"/> element in <see cref="P:System.Data.DataSet.ExtendedProperties"/>, 
            which further matches an element of each table's <see cref="P:System.Data.DataTable.ExtendedProperties"/>. If null, all tables are used.</param>
            <returns>A <see cref="T:System.IO.MemoryStream"/> in the format of std.set</returns>
        </member>
    </members>
</doc>
